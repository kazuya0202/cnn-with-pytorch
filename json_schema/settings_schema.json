{
    "$schema": "http://json-schema.org/draft-07/schema",
    "$id": "https://gist.githubusercontent.com/kazuya0202/bc318b28e459d08548cafe22ac781d48/raw/69f9c45b514876cd07d695764116f68068644fab/test_schema.json",
    "type": "object",
    "title": "kazuya0202 CNN option Schema",
    "description": "The schema comprises the entire JSON document.",
    "required": [
        "datasetPath",
        "height",
        "width"
    ],
    "properties": {
        "datasetPath": {
            "$id": "#/properties/datasetPath",
            "type": "string",
            "description": "Set path of your dataset. Its path needs to be put some directory that classified the images by class.",
            "default": "./${your_dataset_path}",
            "examples": []
        },
        "height": {
            "$id": "#/properties/height",
            "type": "integer",
            "description": "Height of the resized images. (into the Neural Network)",
            "default": 60,
            "examples": [
                60, 80, 100
            ]
        },
        "width": {
            "$id": "#/properties/width",
            "type": "integer",
            "description": "Width of the resized images. (into the Neural Network)",
            "default": 60,
            "examples": [
                60, 80, 100
            ]
        },
        "limitSizeEachClass": {
            "$id": "#/properties/limitSizeEachClass",
            "type": "integer",
            "description": "Your dataset limit of each class. If dataset limit is unlimited, you set `-1`.",
            "default": -1,
            "examples": [
                -1, 1000, 2000
            ]
        },
        "testSize": {
            "$id": "#/properties/testSize",
            "type": "number",
            "description": "The number of testing images. The number os training images is calculated by (1.0 - testSize) if it is a float number or (allImageSize - testSize) if it is an integer.",
            "default": 0.1,
            "examples": [
                0.1, 0.15, 500, 1000
            ]
        },
        "extensions": {
            "$id": "#/properties/extensions",
            "type": "array",
            "description": "Set some extensions you want to use.",
            "default": ["jpg", "png", "jpeg"],
            "items": {
                "$id": "#/properties/extensions/items",
                "type": "string",
                "description": "Image extension.",
                "default": [],
                "examples": [
                    "jpg",
                    "png",
                    "jpeg",
                    "tiff",
                    "tif",
                    "bmp"
                ]
            }
        },
        "channels": {
            "$id": "#/properties/channels",
            "type": "integer",
            "description": "Image channles. For color images, set `3`, for grayscale images, set `1`.",
            "default": 3,
            "examples": [
                1, 3
            ]
        },
        "epoch": {
            "$id": "#/properties/epoch",
            "type": "integer",
            "description": "The number of epoch.",
            "default": 10,
            "examples": [
                10, 100
            ]
        },
        "batch": {
            "$id": "#/properties/batch",
            "type": "integer",
            "description": "The number of batch. A power value of 2 is preferable.",
            "default": 128,
            "examples": [
                64, 128, 256
            ]
        },
        "subdivision": {
            "$id": "#/properties/subdivision",
            "type": "integer",
            "description": "The number of subdivision. When GPU memory is overflowed, increase the value.",
            "default": 4,
            "examples": [
                2, 4, 8
            ]
        },
        "saveCycle": {
            "$id": "#/properties/saveCycle",
            "type": "integer",
            "description": "The cycle of saving model. If you want to save model every epoch, set `1`.",
            "default": 0,
            "examples": [
                0, 1, 2, 10
            ]
        },
        "testCycle": {
            "$id": "#/properties/testCycle",
            "type": "integer",
            "description": "The cycle of testing model with testing images. If you want to test model every epoch, set `1`.",
            "default": 1,
            "examples": [
                0, 1, 2, 10
            ]
        },
        "useGpu": {
            "$id": "#/properties/useGpu",
            "type": "boolean",
            "description": "Whether to use a GPU or not.",
            "default": true,
            "examples": [
                true, false
            ]
        },
        "saveFinalModel": {
            "$id": "#/properties/saveFinalModel",
            "type": "boolean",
            "description": "Whether to save a model of final epoch or not.",
            "default": true,
            "examples": [
                true, false
            ]
        },
        "shuffleDatasetPerEpoch": {
            "$id": "#/properties/shuffleDatasetPerEpoch",
            "type": "boolean",
            "description": "Whether to shuffle dataset every epoch or not.",
            "default": true,
            "examples": [
                true, false
            ]
        },
        "isExecuteGradCam": {
            "$id": "#/properties/isExecuteGradCam",
            "type": "boolean",
            "description": "Whether to execute Grad-CAM or not.",
            "default": true,
            "examples": [
                true, false
            ]
        },
        "GradCamLayer": {
            "$id": "#/properties/GradCamLayer",
            "type": "string",
            "description": "Visualize Grad-CAM layer.",
            "default": "conv5",
            "examples": [
                "conv5"
            ]
        },
        "isExecuteGradCamWhenOnlyMistake": {
            "$id": "#/properties/isExecuteGradCamWhenOnlyMistake",
            "type": "boolean",
            "description": "Whether to execute when only mistaked images or not.",
            "default": true,
            "examples": [
                true, false
            ]
        },
        "destinations": {
            "$id": "#/properties/destinations",
            "type": "object",
            "description": "Distination schema.",
            "default": {},
            "examples": [
                {
                    "false": "./false",
                    "trainedModel": "./",
                    "config": "./config",
                    "log": "./logs",
                    "gradCam": "./GradCAM_results"
                }
            ],
            "properties": {
                "false": {
                    "$id": "#/properties/destinations/properties/false",
                    "type": "string",
                    "description": "Save the mistaken images to its path when training.",
                    "default": "./false",
                    "examples": [
                        "./false"
                    ]
                },
                "trainedModel": {
                    "$id": "#/properties/destinations/properties/trainedModel",
                    "type": "string",
                    "description": "Save the trained model to its path.",
                    "default": "./",
                    "examples": [
                        "./"
                    ]
                },
                "config": {
                    "$id": "#/properties/destinations/properties/config",
                    "type": "string",
                    "description": "Save the config files to its path.",
                    "default": "./config",
                    "examples": [
                        "./config"
                    ]
                },
                "log": {
                    "$id": "#/properties/destinations/properties/log",
                    "type": "string",
                    "description": "Save the log to its path.",
                    "default": "./logs",
                    "examples": [
                        "./logs"
                    ]
                },
                "gradCam": {
                    "$id": "#/properties/destinations/properties/gradCam",
                    "type": "string",
                    "description": "Save the images processed Grad-CAM to its path.",
                    "default": "./GradCAM_results",
                    "examples": [
                        "./GradCAM_results"
                    ]
                }
            }
        },
        "reTraining": {
            "$id": "#/properties/reTraining",
            "type": "object",
            "description": "ReTraining schema.",
            "default": {},
            "examples": [
                {
                    "isAvailableReTraining": false,
                    "isReTrainingModel": false,
                    "loadModelPath": ""
                }
            ],
            "properties": {
                "isAvailableReTraining": {
                    "$id": "#/properties/reTraining/properties/isAvailableReTraining",
                    "type": "boolean",
                    "description": "Whether to available the re-training state or not. If it is true, the file size of the trained model exceeds 1GB.",
                    "default": false,
                    "examples": [
                        false, true
                    ]
                },
                "reTrainingModel": {
                    "$id": "#/properties/reTraining/properties/reTrainingModel",
                    "type": "boolean",
                    "description": "Whether to enable the re-training model or not. If it is true, set the model's path that is aveilabled state to `loadModelPath`.",
                    "default": false,
                    "examples": [
                        false, true
                    ]
                },
                "loadModelPath": {
                    "$id": "#/properties/reTraining/properties/loadModelPath",
                    "type": "string",
                    "description": "The path of model.",
                    "default": "./${trained_model_path}",
                    "examples": []
                }
            }
        },
        "options": {
            "$id": "#/properties/options",
            "type": "object",
            "description": "Options schema.",
            "default": {},
            "examples": [
                {
                    "isShowNetworkDifinition": true,
                    "isSaveDebugLog": true,
                    "isSaveRateLog": true
                }
            ],
            "properties": {
                "isShowNetworkDifinition": {
                    "$id": "#/properties/options/properties/isShowNetworkDifinition",
                    "type": "boolean",
                    "description": "Whether to enable the showing network difinition. For example, CNN structure, the number of images and so on.",
                    "default": true,
                    "examples": [
                        true, false
                    ]
                },
                "isSaveDebugLog": {
                    "$id": "#/properties/options/properties/isSaveDebugLog",
                    "type": "boolean",
                    "description": "Whether to save debug log.",
                    "default": true,
                    "examples": [
                        true, false
                    ]
                },
                "isSaveRateLog": {
                    "$id": "#/properties/options/properties/isSaveRateLog",
                    "type": "boolean",
                    "description": "Whether to save rate log.",
                    "default": true,
                    "examples": [
                        true, false
                    ]
                }
            }
        }
    }
}
